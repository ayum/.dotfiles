[advice]
	diverging = "false"

[alias]
	a = "add"
	aa = "add --all"
	ac = "!f() { : git commit; git add --all && git commit \"$@\"; }; f"
	acf = "!f() { : git commit; lastarg=\"${@:$#:1}\"; [[ $# == 0 ]] && lastarg=\"\"; commitish=\"${lastarg}\"; [[ \"$lastarg\" == -* ]] && commitish=\"\"; [[ \"$lastarg\" != -* ]] && lastarg=\"\"; [[ $# -le 1 ]] && set -- \"\"; git add --all && git commit \"${@:1:$#-1}\" $lastarg --fixup \"${commitish:-HEAD}\"; }; f"
	acfp = "!f() { : git push; git acf; git push \"$@\"; }; f"
	acfpf = "!f() { : git push; git acf; git push --force \"$@\"; }; f"
	acg = "!f() { : git commit; git add --all && git cg \"$@\"; }; f"
	acm = "!f() { : git commit; git add --all && git commit --amend \"$@\"; }; f"
	acmn = "!f() { : git commit; git add --all && git commit --amend --no-edit \"$@\"; }; f"
	acmnp = "!f() { : git push; git acmn; git push \"$@\"; }; f"
	acmnpf = "!f() { : git push; git acmn; git push --force \"$@\"; }; f"
	acmp = "!f() { : git push; git acm; git push \"$@\"; }; f"
	acmpf = "!f() { : git push; git acm; git push --force \"$@\"; }; f"
	acp = "!f() { : git push; git ac; git push \"$@\"; }; f"
	acpf = "!f() { : git push; git ac; git push --force \"$@\"; }; f"
	b = "branch"
	ba = "branch --all"
	bal = "branch --all --list"
	bd = "branch --delete"
	bdm = "!f() { : git branch; main=\"$(git xmain)\"; lastarg=\"${@:$#:1}\"; [[ $# == 0 ]] && lastarg=\"\"; commitish=\"${lastarg}\"; [[ \"$lastarg\" == -* ]] && commitish=\"\"; [[ \"$lastarg\" != -* ]] && lastarg=\"\"; [[ $# -le 1 ]] && set -- \"\"; git branch --merged \"${commitish:-$main}\" | sed \"s/^[*[:space:]]*//g\" | grep -v \"$main\" | grep \".*-.*\" | xargs -I% git branch \"${@:1:$#-1}\" $lastarg --delete \"%\"; }; f"
	bf = "branch --force"
	bl = "branch --list"
	bla = "bal"
	blr = "brl"
	bm = "branch --merged"
	brl = "branch --remotes --list"
	bw = "switch -c"
	c = "commit"
	ca = "commit --all"
	caf = "!f() { : git commit; lastarg=\"${@:$#:1}\"; [[ $# == 0 ]] && lastarg=\"\"; commitish=\"${lastarg}\"; [[ \"$lastarg\" == -* ]] && commitish=\"\"; [[ \"$lastarg\" != -* ]] && lastarg=\"\"; [[ $# -le 1 ]] && set -- \"\"; git commit --all \"${@:1:$#-1}\" $lastarg --fixup \"${commitish:-HEAD}\"; }; f"
	cafp = "!f() { : git push; git caf; git push \"$@\"; }; f"
	cafpf = "!f() { : git push; git caf; git push --force \"$@\"; }; f"
	cag = "!f() { : git commit; lastarg=\"${@:$#:1}\"; [[ $# == 0 ]] && lastarg=\"\"; message=\"${lastarg}\"; [[ \"$lastarg\" == -* ]] && message=\"\"; [[ \"$lastarg\" != -* ]] && lastarg=\"\"; [[ $# -le 1 ]] && set -- \"\"; git commit --all \"${@:1:$#-1}\" $lastarg --message \"${message:-Fix from $(git rev-parse --quiet --verify --abbrev-ref HEAD)}\"; }; f"
	cam = "commit --all --amend"
	camn = "commit --all --amend --no-edit"
	camnp = "!f() { : git push; git camn; git push \"$@\"; }; f"
	camnpf = "!f() { : git push; git camn; git push --force \"$@\"; }; f"
	camp = "!f() { : git push; git cam; git push \"$@\"; }; f"
	campf = "!f() { : git push; git cam; git push --force \"$@\"; }; f"
	cap = "!f() { : git push; git ca; git push \"$@\"; }; f"
	capf = "!f() { : git push; git ca; git push --force \"$@\"; }; f"
	ce = "commit --allow-empty"
	ceg = "!f() { : git commit; git cg --allow-empty \"$@\"; }; f"
	cem = "commit --allow-empty --amend"
	cemg = "!f() { : git commit; git cg --amend --allow-empty \"$@\"; }; f"
	cemn = "commit --allow-empty --amend --no-edit"
	cf = "!f() { : git commit; lastarg=\"${@:$#:1}\"; [[ $# == 0 ]] && lastarg=\"\"; commitish=\"${lastarg}\"; [[ \"$lastarg\" == -* ]] && commitish=\"\"; [[ \"$lastarg\" != -* ]] && lastarg=\"\"; [[ $# -le 1 ]] && set -- \"\"; git commit \"${@:1:$#-1}\" $lastarg --fixup \"${commitish:-HEAD}\"; }; f"
	cg = "!f() { : git commit; lastarg=\"${@:$#:1}\"; [[ $# == 0 ]] && lastarg=\"\"; message=\"${lastarg}\"; [[ \"$lastarg\" == -* ]] && message=\"\"; [[ \"$lastarg\" != -* ]] && lastarg=\"\"; [[ $# -le 1 ]] && set -- \"\"; git commit \"${@:1:$#-1}\" $lastarg --message \"${message:-Fix from $(git rev-parse --quiet --verify --abbrev-ref HEAD)}\"; }; f"
	cm = "commit --amend"
	cmn = "commit --amend --no-edit"
	cmnpf = "!f() { : git push; git cmn; git push --force \"$@\"; }; f"
	cmpf = "!f() { : git push; git cm; git push --force \"$@\"; }; f"
	d = "diff"
	e = "reset"
	eh = "reset --hard"
	es = "reset --soft"
	f = "fetch"
	fa = "fetch --all"
	fe = "!f() { : git reset; upstream=\"$(git rev-parse --quiet --verify --abbrev-ref --symbolic-full-name HEAD@{u})\"; lastarg=\"${@:$#:1}\"; [[ $# == 0 ]] && lastarg=\"\"; commitish=\"${lastarg}\"; [[ \"$lastarg\" == -* ]] && commitish=\"\"; [[ \"$lastarg\" != -* ]] && lastarg=\"\"; [[ $# -le 1 ]] && set -- \"\"; commitish=\"${commitish:-$upstream}\"; [[ \"$commitish\" == */* ]] && remote=\"${commitish%%/*}\"; [[ \"$commitish\" != */* ]] && remote=\"--all\"; git fetch \"${remote}\" && git reset \"${@:1:$#-1}\" $lastarg \"$commitish\"; }; f"
	h = "show"
	k = "checkout"
	kb = "checkout --branch"
	l = "log"
	m = "merge"
	n = "clean"
	nd = "clean -d"
	ndf = "clean -d --force"
	ndn = "clean -d --dry-run"
	nf = "clean --force"
	nn = "clean --dry-run"
	o = "remote"
	p = "push"
	pf = "push --force"
	r = "rebase"
	rq = "!f() { : git rebase; subj=\"$(git log -1 --format=%s)\"; subj=\"${subj##*[Ff][Ii][Xx][Uu][Pp]! }\"; lastarg=\"${@:$#:1}\"; [[ $# == 0 ]] && lastarg=\"\"; commitish=\"${lastarg}\"; [[ \"$lastarg\" == -* ]] && commitish=\"\"; [[ \"$lastarg\" != -* ]] && lastarg=\"\"; [[ $# -le 1 ]] && set -- \"\"; git rebase \"${@:1:$#-1}\" $lastarg --autosquash $(git log -1 --format=%H --grep=\"^${subj}$\")^; }; f"
	s = "status"
	t = "stash"
	u = "pull"
	ut = "pull --autostash"
	utm = "pull --autostash --merge"
	utr = "pull --autostash --rebase"
	v = "rev-parse"
	w = "switch"
	xdang = "!git fsck --lost-found --name-objects --no-reflogs | grep \"dangling commit\" | sed -e \"s@dangling commit @@\" | xargs git show -s --format=\"%ct %H %cd %s\" | sort -r | sed -e \"s@^\\\\w*\\\\s*@@\" | less -F"
	xmain = "!mainbranch=\"$(git rev-parse --abbrev-ref origin/HEAD)\"; echo ${mainbranch#*/}"
	xparse = "!f() { :; }; f"

[diff]
	external = "/nix/store/663fidfna9fcpr1gpxvy2q16vqpl8frb-difftastic-0.61.0/bin/difft --color auto --background dark --display side-by-side"

[init]
	defaultBranch = "master"

[pull]
	ff = "only"

[push]
	autoSetupRemote = "true"

[include]
	path = "user.inc"
